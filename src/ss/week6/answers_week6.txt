    _   _  _ _____      _____ ___  ___  __      _____ ___ _  __   __
   /_\ | \| / __\ \    / / __| _ \/ __| \ \    / / __| __| |/ /  / /
  / _ \| .` \__ \\ \/\/ /| _||   /\__ \  \ \/\/ /| _|| _|| ' <  / _ \
 /_/ \_\_|\_|___/ \_/\_/ |___|_|_\|___/   \_/\_/ |___|___|_|\_\ \___/

Your name(s):
-Hanna Hamielec
-




Please submit your textual answers to the following questions in this file:
- P-6.9
26 lower case letters - there's 26^4 four letter lowercase word,
so it could take up to 26^4 tries using brute force to find Alice's password

- P-6.11
Thread that is used to draw the image overrides the thread running the programme

- P-6.12
menu can no longer overlaps the drawing, and can't be used even when the drawing is finished.
Thread drawing the mandel works once and stops the run thread

- P-6.14
Because no thread that would actually draw and start the bouncing ball animation is made

- P-6.18
Thread are not synchronized and override each other

- P-6.20
Threads are still overlapping but, but don't override

- P-6.21
no, the thread are still overlapping

- P-6.23
1.What does it mean for a lock to be reentrant?
it means that lock allows threads to reenter/use lock many times without deadlock
2. Is this behaviour different from the synchronized statement?
Synchronized releases the lock automatically, while Lock must release the lock manually, also
 synchronize locks classes, methods, and code blocks, while Lock is block-wide
3. What would be advantages of using a ReentrantLock?
flexibility,ability to lock interruptibly and timeout while waiting for lock.
4. And what would be disadvantages?
Easier to forget to unlock; programmer is responsible for remembering about the lock

- P-6.25
values put by producers aren't read and printed in the  correct order
it can be solved by synchronizing the thread and making them wait to notify each other

- P-6.26
notifyAll is preferable, because notify has bigger risk of thread missing

- P-6.28
since account class is not thread safe and transactions are not protected, after some time they are executed by multiple
threads at the same time causing the final value to not be correct

- P-6.29